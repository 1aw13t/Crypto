import string
ciphertext = open("ciphertext.txt").read().strip()
b64chars=string.ascii_letters + string.digits + "=+/" + "\n"
key_chars = string.printable + string.whitespace
keysize=12

def decrypt(ct, k):
	ct=ct.decode("hex")
	pt=""
	#pt += str([chr(ord(ct[i]) ^ ord(k[i%keysize])) for i in range(len(ct))])
	for i in range(len(ct)):
		pt+=chr(ord(ct[i]) ^ ord(k[i%keysize]))
	return pt 

def check_keychar_validity(ciphertext, keychar, index = 0, keylength = 12):
    key = "\x00"*index + keychar + "\x00"*(keylength-index-1)
    pt = decrypt(ciphertext, key)
    for i in range(index, len(pt), keylength):
        if pt[i] not in b64chars:
            return False
    return True


key=""
for j in range(keysize):
	for i in key_chars:
		if check_keychar_validity(ciphertext, i,j):
			key += i
			break;
print decrypt(ciphertext,key).decode("base64")

			

	
